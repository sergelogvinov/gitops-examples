---
fullnameOverride: "altinity-operator"

serviceAccount:
  create: true
rbac:
  create: true
serviceMonitor:
  enabled: false
dashboards:
  enabled: false

operator:
  image:
    tag: "0.24.2"

  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault

  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 128Mi

metrics:
  enabled: true

  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10258
  runAsGroup: 10258
  fsGroup: 10258
  fsGroupChangePolicy: "OnRootMismatch"

nodeSelector:
  node-role.kubernetes.io/control-plane: ""
tolerations:
  - key: node-role.kubernetes.io/control-plane
    effect: NoSchedule

configs:
  files:
    config.yaml:
      # IMPORTANT
      # This file is auto-generated
      # Do not edit this file - all changes would be lost
      # Edit appropriate template in the following folder:
      # deploy/builder/templates-config
      # IMPORTANT
      #
      # Template parameters available:
      #   WATCH_NAMESPACES=
      #   CH_USERNAME_PLAIN=
      #   CH_PASSWORD_PLAIN=
      #   CH_CREDENTIALS_SECRET_NAMESPACE=
      #   CH_CREDENTIALS_SECRET_NAME=clickhouse-operator
      #   VERBOSITY=1

      ################################################
      ##
      ## Watch section
      ##
      ################################################
      watch:
        # List of namespaces where clickhouse-operator watches for events.
        # Concurrently running operators should watch on different namespaces.
        # IMPORTANT
        # Regexp is applicable.
        #namespaces: ["dev", "test"]
        namespaces: ["clickhouse", ".+-db$"]
      clickhouse:
        configuration:
          ################################################
          ##
          ## Configuration files section
          ##
          ################################################
          file:
            # Each 'path' can be either absolute or relative.
            # In case path is absolute - it is used as is
            # In case path is relative - it is relative to the folder where configuration file you are reading right now is located.
            path:
              # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
              common: chi/config.d
              # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
              host: chi/conf.d
              # Path to the folder where ClickHouse configuration files with users' settings are located.
              # Files are common for all instances within a CHI.
              user: chi/users.d
          ################################################
          ##
          ## Configuration users section
          ##
          ################################################
          user:
            # Default settings for user accounts, created by the operator.
            # IMPORTANT. These are not access credentials or settings for 'default' user account,
            # it is a template for filling out missing fields for all user accounts to be created by the operator,
            # with the following EXCEPTIONS:
            # 1. 'default' user account DOES NOT use provided password, but uses all the rest of the fields.
            #    Password for 'default' user account has to be provided explicitly, if to be used.
            # 2. CHOP user account DOES NOT use:
            #    - profile setting. It uses predefined profile called 'clickhouse_operator'
            #    - quota setting. It uses empty quota name.
            #    - networks IP setting. Operator specifies 'networks/ip' user setting to match operators' pod IP only.
            #    - password setting. Password for CHOP account is used from 'clickhouse.access.*' section
            default:
              # Default values for ClickHouse user account(s) created by the operator
              #   1. user/profile - string
              #   2. user/quota - string
              #   3. user/networks/ip - multiple strings
              #   4. user/password - string
              # These values can be overwritten on per-user basis.
              profile: "default"
              quota: "default"
              networksIP:
                - "::1"
                - "127.0.0.1"
              password: "default"
          ################################################
          ##
          ## Configuration network section
          ##
          ################################################
          network:
            # Default host_regexp to limit network connectivity from outside
            hostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"
        ################################################
        ##
        ## Configuration restart policy section
        ## Configuration restart policy describes what configuration changes require ClickHouse restart
        ##
        ################################################
        configurationRestartPolicy:
          rules:
            # IMPORTANT!
            # Special version of "*" - default version - has to satisfy all ClickHouse versions.
            # Default version will also be used in case ClickHouse version is unknown.
            # ClickHouse version may be unknown due to host being down - for example, because of incorrect "settings" section.
            # ClickHouse is not willing to start in case incorrect/unknown settings are provided in config file.
            - version: "*"
              rules:
                # see https://kb.altinity.com/altinity-kb-setup-and-maintenance/altinity-kb-server-config-files/#server-config-configxml-sections-which-dont-require-restart
                # to be replaced with "select * from system.server_settings where changeable_without_restart = 'No'"
                - settings/*: "yes"
                # single values
                - settings/access_control_path: "no"
                - settings/dictionaries_config: "no"
                - settings/max_server_memory_*: "no"
                - settings/max_*_to_drop: "no"
                - settings/max_concurrent_queries: "no"
                - settings/models_config: "no"
                - settings/user_defined_executable_functions_config: "no"
                # structured XML
                - settings/logger/*: "no"
                - settings/macros/*: "no"
                - settings/remote_servers/*: "no"
                - settings/user_directories/*: "no"
                - settings/display_secrets_in_show_and_select: "no"
                - zookeeper/*: "yes"
                - files/*.xml: "yes"
                - files/config.d/*.xml: "yes"
                - files/config.d/*dict*.xml: "no"
                - files/config.d/*no_restart*: "no"
                # exceptions in default profile
                - profiles/default/background_*_pool_size: "yes"
                - profiles/default/max_*_for_server: "yes"
            - version: "21.*"
              rules:
                - settings/logger: "yes"
        #################################################
        ##
        ## Access to ClickHouse instances
        ##
        ################################################
        access:
          # Possible values for 'scheme' are:
          #   1. http - force http to be used to connect to ClickHouse instances
          #   2. https - force https to be used to connect to ClickHouse instances
          #   3. auto - either http or https is selected based on open ports
          scheme: "auto"
          # ClickHouse credentials (username, password and port) to be used by the operator to connect to ClickHouse instances.
          # These credentials are used for:
          #   1. Metrics requests
          #   2. Schema maintenance
          # User with these credentials can be specified in additional ClickHouse .xml config files,
          # located in 'clickhouse.configuration.file.path.user' folder
          username: ""
          password: ""
          rootCA: ""
          # Location of the k8s Secret with username and password to be used by the operator to connect to ClickHouse instances.
          # Can be used instead of explicitly specified username and password available in sections:
          #   - clickhouse.access.username
          #   - clickhouse.access.password
          # Secret should have two keys:
          #   1. username
          #   2. password
          secret:
            # Empty `namespace` means that k8s secret would be looked in the same namespace where operator's pod is running.
            namespace: ""
            # Empty `name` means no k8s Secret would be looked for
            name: '{{ include "altinity-clickhouse-operator.fullname" . }}'
          # Port where to connect to ClickHouse instances to
          port: 8123
          # Timeouts used to limit connection and queries from the operator to ClickHouse instances
          # Specified in seconds.
          timeouts:
            # Timout to setup connection from the operator to ClickHouse instances. In seconds.
            connect: 1
            # Timout to perform SQL query from the operator to ClickHouse instances. In seconds.
            query: 4
        #################################################
        ##
        ## Metrics collection
        ##
        ################################################
        metrics:
          # Timeouts used to limit connection and queries from the metrics exporter to ClickHouse instances
          # Specified in seconds.
          timeouts:
            # Timeout used to limit metrics collection request. In seconds.
            # Upon reaching this timeout metrics collection is aborted and no more metrics are collected in this cycle.
            # All collected metrics are returned.
            collect: 9
