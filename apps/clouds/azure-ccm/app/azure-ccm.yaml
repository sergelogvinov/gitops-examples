apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: cloud-controller-manager-azure
  name: cloud-controller-manager-azure
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    k8s-app: cloud-controller-manager-azure
  name: system:cloud-controller-manager-azure
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: cloud-controller-manager-azure
  name: system:cloud-controller-manager:extension-apiserver-authentication-reader-azure
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: cloud-controller-manager-azure
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: cloud-controller-manager-azure
  name: system:cloud-controller-manager-azure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager-azure
subjects:
  - kind: ServiceAccount
    name: cloud-controller-manager-azure
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: cloud-controller-manager
    k8s-app: cloud-controller-manager-azure
  name: cloud-controller-manager-azure
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      component: cloud-controller-manager
      k8s-app: cloud-controller-manager-azure
      tier: control-plane
  template:
    metadata:
      labels:
        component: cloud-controller-manager
        k8s-app: cloud-controller-manager-azure
        tier: control-plane
    spec:
      containers:
        - args:
            - --allocate-node-cidrs=false
            - --cloud-config=/etc/azure/azure.json
            - --cloud-provider=azure
            - --cluster-cidr=10.244.0.0/16
            - --cluster-name=kubernetes
            - --configure-cloud-routes=false
            - --controllers=cloud-node-lifecycle
            - --leader-elect=true
            - --leader-elect-resource-name=cloud-controller-manager-azure
            - --route-reconciliation-period=10s
            - --secure-port=10268
            - --v=2
          command:
            - /cloud-controller-manager
          image: ghcr.io/sergelogvinov/cloud-controller-manager-azure:1.31
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10268
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
          name: cloud-controller-manager
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /etc/azure
              name: cloud-config
              readOnly: true
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
        node.cloudprovider.kubernetes.io/platform: azure
      priorityClassName: system-node-critical
      serviceAccountName: cloud-controller-manager-azure
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              component: cloud-controller-manager
              k8s-app: cloud-controller-manager-azure
              tier: control-plane
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
      volumes:
        - name: cloud-config
          secret:
            secretName: azure-managed-identity
