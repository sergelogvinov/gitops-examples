apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-gce-pd-controller-sa
  namespace: csi-gcp
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-gce-pd-node-sa
  namespace: csi-gcp
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-gce-pd-node-sa-win
  namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: gcp-compute-persistent-disk-csi-driver
  name: csi-gce-pd-leaderelection-role
  namespace: csi-gcp
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-gce-pd-attacher-role
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-gce-pd-controller-deploy
rules:
  - apiGroups:
      - policy
    resourceNames:
      - csi-gce-pd-controller-psp
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-gce-pd-node-deploy
rules:
  - apiGroups:
      - policy
    resourceNames:
      - csi-gce-pd-node-psp
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-gce-pd-node-deploy-win
rules:
  - apiGroups:
      - policy
    resourceNames:
      - csi-gce-pd-node-psp-win
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-gce-pd-provisioner-role
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattributesclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - get
      - list
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-gce-pd-resizer-role
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattributesclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-gce-pd-snapshotter-role
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents/status
    verbs:
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: gcp-compute-persistent-disk-csi-driver
  name: csi-gce-pd-controller-leaderelection-binding
  namespace: csi-gcp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: csi-gce-pd-leaderelection-role
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-controller-sa
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-node-deploy
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-controller-sa
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-controller-attacher-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-attacher-role
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-controller-sa
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-controller-deploy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-controller-deploy
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-controller-sa
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-controller-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-provisioner-role
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-controller-sa
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-controller-snapshotter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-snapshotter-role
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-controller-sa
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-node-deploy
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-node-sa
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-node-win
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-node-deploy-win
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-node-sa-win
    namespace: csi-gcp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-gce-pd-resizer-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-gce-pd-resizer-role
subjects:
  - kind: ServiceAccount
    name: csi-gce-pd-controller-sa
    namespace: csi-gcp
---
apiVersion: scheduling.k8s.io/v1
description:
  This priority class should be used for the GCE PD CSI driver controller
  deployment only.
globalDefault: false
kind: PriorityClass
metadata:
  name: csi-gce-pd-controller
value: 900000000
---
apiVersion: scheduling.k8s.io/v1
description:
  This priority class should be used for the GCE PD CSI driver node deployment
  only.
globalDefault: false
kind: PriorityClass
metadata:
  name: csi-gce-pd-node
value: 900001000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-gce-pd-controller
  namespace: csi-gcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gcp-compute-persistent-disk-csi-driver
  template:
    metadata:
      labels:
        app: gcp-compute-persistent-disk-csi-driver
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node.cloudprovider.kubernetes.io/platform
                    operator: In
                    values:
                      - gcp
              weight: 100
      containers:
        - args:
            - --v=2
            - --endpoint=unix:/csi/csi.sock
            - --cloud-config=/etc/gce/gce.conf
            - --run-node-service=false
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloud-sa/cloud-sa.json
          image: registry.k8s.io/cloud-provider-gcp/gcp-compute-persistent-disk-csi-driver:v1.15.4
          name: gce-pd-driver
          volumeMounts:
            - mountPath: /etc/gce
              name: cloud-config
            - mountPath: /csi
              name: socket-dir
            - mountPath: /etc/cloud-sa
              name: cloud-sa-volume
              readOnly: true
        - args:
            - --v=2
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=true
            - --http-endpoint=:22011
            - --leader-election-namespace=$(PDCSI_NAMESPACE)
            - --timeout=250s
            - --extra-create-metadata
            - --leader-election
            - --default-fstype=ext4
            - --controller-publish-readonly=true
            - --feature-gates=VolumeAttributesClass=true
          env:
            - name: PDCSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz/leader-election
              port: http-endpoint
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 10
          name: csi-provisioner
          ports:
            - containerPort: 22011
              name: http-endpoint
              protocol: TCP
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --v=2
            - --csi-address=/csi/csi.sock
            - --http-endpoint=:22012
            - --leader-election
            - --leader-election-namespace=$(PDCSI_NAMESPACE)
            - --timeout=250s
          env:
            - name: PDCSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: registry.k8s.io/sig-storage/csi-attacher:v4.4.3
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz/leader-election
              port: http-endpoint
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 10
          name: csi-attacher
          ports:
            - containerPort: 22012
              name: http-endpoint
              protocol: TCP
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --v=2
            - --csi-address=/csi/csi.sock
            - --http-endpoint=:22013
            - --leader-election
            - --leader-election-namespace=$(PDCSI_NAMESPACE)
            - --handle-volume-inuse-error=false
            - --feature-gates=VolumeAttributesClass=true
          env:
            - name: PDCSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: registry.k8s.io/sig-storage/csi-resizer:v1.11.1
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz/leader-election
              port: http-endpoint
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 10
          name: csi-resizer
          ports:
            - containerPort: 22013
              name: http-endpoint
              protocol: TCP
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      hostNetwork: false
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: csi-gce-pd-controller
      serviceAccountName: csi-gce-pd-controller-sa
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      volumes:
        - configMap:
            defaultMode: 420
            name: gcp-cloud-csi
          name: cloud-config
        - emptyDir: {}
          name: socket-dir
        - name: cloud-sa-volume
          secret:
            secretName: cloud-sa
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-gce-pd-node
  namespace: csi-gcp
spec:
  selector:
    matchLabels:
      app: gcp-compute-persistent-disk-csi-driver
  template:
    metadata:
      labels:
        app: gcp-compute-persistent-disk-csi-driver
    spec:
      containers:
        - args:
            - --v=2
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.3
          name: csi-driver-registrar
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 10Mi
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /registration
              name: registration-dir
        - args:
            - --v=5
            - --endpoint=unix:/csi/csi.sock
            - --run-controller-service=false
          image: registry.k8s.io/cloud-provider-gcp/gcp-compute-persistent-disk-csi-driver:v1.15.4
          name: gce-pd-driver
          resources:
            limits:
              memory: 50Mi
            requests:
              memory: 10Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: kubelet-dir
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /dev
              name: device-dir
            - mountPath: /sys
              name: sys
      hostNetwork: false
      nodeSelector:
        kubernetes.io/os: linux
        node.cloudprovider.kubernetes.io/platform: gcp
      priorityClassName: csi-gce-pd-node
      serviceAccountName: csi-gce-pd-node-sa
      tolerations:
        - effect: NoSchedule
          key: node.kubernetes.io/disk-pressure
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/unschedulable
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys
            type: Directory
          name: sys
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: pd.csi.storage.gke.io
spec:
  attachRequired: true
  podInfoOnMount: false
