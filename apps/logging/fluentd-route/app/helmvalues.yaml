fullnameOverride: fluentd-route

podAnnotations:
  fluentbit.io/exclude: "true"

inputCerts:
  create: true
  clients:
    - fluent-bit

configMaps:
  output.conf: |
    <match audit.**>
      @type relabel
      @label @STORE
    </match>

    <match kubernetes.**>
      @type record_modifier
      <record>
        time        ${record["time"] ? record["time"].to_s : Time.now.strftime('%Y-%m-%dT%H:%M:%S.%3N')}
        #
        namespace   ${record["namespace"].to_s == "" ? record["kubernetes"]["namespace_name"] : record["namespace"]}
        container   ${record["kubernetes"]["container_name"].to_s || "" }
        pod         ${record["kubernetes"]["pod_name"].to_s       || "" }
        node        ${record["kubernetes"]["host"].to_s           || "" }
      </record>
      tag kube.${record["kubernetes"]["namespace_name"]}.${record["kubernetes"]["container_name"]}.${record["kubernetes"]["pod_name"]}
    </match>

    <filter kube.ingress-nginx.**>
      @type record_modifier
      <record>
        # check and convert
        method      ${record["method"]   ? record["method"].to_s       : "" }
        geo         ${record["geo"]      ? record["geo"].to_s          : "" }
        status      ${record["status"]   ? record["status"].to_s       : "" }
        log         ${record["log"]      ? record["log"].to_s          : "" }
      </record>
      remove_keys kubernetes,docker
    </filter>

    <match kube.**>
        @type relabel
        @label @STORE
    </match>

    <match **>
      @type null
    </match>

  peers.conf: |
    <label @STORE>
      <match **>
        @type stdout
        <format>
          @type hash
        </format>
      </match>
    </label>

resources:
  limits:
    cpu: 1
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 512Mi

metrics:
  enabled: true

priorityClassName: system-cluster-critical

useDaemonSet: true
nodeSelector:
  node-role.kubernetes.io/control-plane: ""
tolerations:
  - key: node-role.kubernetes.io/control-plane
    effect: NoSchedule
